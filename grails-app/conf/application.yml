---
grails:
    config:
        locations:
            - ~/.grails/econ-application.yml
            - ~/.gradle/econ-application.yml
            - /projects/builds/econ/application.yml
            - classpath:application.yml
            - file:///etc/app/econ.yml

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

dataSources:
  dataSource:
      pooled: true
      jmxExport: true
      driverClassName: org.postgresql.Driver
      logSql: true
      properties:
          jmxEnabled: true
          initialSize: 1
          maxActive: 1
          minIdle: 1
          maxIdle: 5
          maxWait: 100000
          maxAge: 60000
          timeBetweenEvictionRunsMillis: 5000
          minEvictableIdleTimeMillis: 60000
          validationQuery: SELECT 1
          validationQueryTimeout: 3
          validationInterval: 150000
          testOnBorrow: true
          testWhileIdle: true
          testOnReturn: false
          jdbcInterceptors: ConnectionState
          defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
  admin:
      pooled: true
      jmxExport: true
      driverClassName: org.postgresql.Driver
      logSql: true
      properties:
          jmxEnabled: true
          initialSize: 1
          maxActive: 1
          minIdle: 1
          maxIdle: 5
          maxWait: 100000
          maxAge: 60000
          timeBetweenEvictionRunsMillis: 5000
          minEvictableIdleTimeMillis: 60000
          validationQuery: SELECT 1
          validationQueryTimeout: 3
          validationInterval: 150000
          testOnBorrow: true
          testWhileIdle: true
          testOnReturn: false
          jdbcInterceptors: ConnectionState
          defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

environments:
    example:
        grails.converters.default.pretty.print: true
        dataSources:
            dataSource:
                # dbCreate: create-drop
                dbCreate: update
                username: USERNAME
                password: PASSWORD
                url: jdbc:postgresql://CONNECTION_STRINGG
            admin:
                # dbCreate: create-drop
                dbCreate: update
                username: USERNAME
                password: PASSWORD
                url: jdbc:postgresql://CONNECTION_STRINGG

---
---
grails:
    profile: rest-api
    codegen:
        defaultPackage: econsupp.api
    spring:
        transactionManagement:
            proxies: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    groovy:
        template:
            check-template-location: false
# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

---
grails:
    resources:
        pattern: '/**'
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
        upload:
            maxFileSize: 50000000
    converters:
        encoding: UTF-8
    plugin:
        springsecurity:
            rejectIfNoRule: true
            fii:
                rejectPublicInvocations: false
            controllerAnnotations:
                staticRules:
                    [
                        [pattern: '/api/**', access: ['permitAll'], httpMethod: 'POST'],
                        [pattern: '/api/**', access: ['permitAll'], httpMethod: 'GET'],
                        [pattern: '/api/**', access: ['permitAll'], httpMethod: 'PUT'],
                        [pattern: '/api/**', access: ['permitAll'], httpMethod: 'DELETE'],
                    ]
